{
    "openapi": "3.1.0",
    "info": {
        "title": "API_CARMOT",
        "version": "0.0.1"
    },
    "servers": [
        {
            "url": "http://localhost/api"
        }
    ],
    "paths": {
        "/crm/agendas": {
            "get": {
                "operationId": "agendas.index",
                "summary": "Muestra una lista de las agendas",
                "tags": [
                    "Agenda"
                ],
                "parameters": [
                    {
                        "name": "sort_by",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_direction",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/AgendaResource"
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "current_page": {
                                                    "type": "string"
                                                },
                                                "last_page": {
                                                    "type": "string"
                                                },
                                                "per_page": {
                                                    "type": "string"
                                                },
                                                "total": {
                                                    "type": "string"
                                                },
                                                "from": {
                                                    "type": "string"
                                                },
                                                "to": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "current_page",
                                                "last_page",
                                                "per_page",
                                                "total",
                                                "from",
                                                "to"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "post": {
                "operationId": "agendas.store",
                "summary": "Almacena una nueva agenda en la base de datos",
                "tags": [
                    "Agenda"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreAgendaRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Agenda creada exitosamente."
                                            ]
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/AgendaResource"
                                        }
                                    },
                                    "required": [
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/crm/agendas/{agenda}": {
            "get": {
                "operationId": "agendas.show",
                "summary": "Muestra la agenda especificada",
                "tags": [
                    "Agenda"
                ],
                "parameters": [
                    {
                        "name": "agenda",
                        "in": "path",
                        "required": true,
                        "description": "The agenda ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/AgendaResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "put": {
                "operationId": "agendas.update",
                "summary": "Actualiza la agenda especificada en la base de datos",
                "tags": [
                    "Agenda"
                ],
                "parameters": [
                    {
                        "name": "agenda",
                        "in": "path",
                        "required": true,
                        "description": "The agenda ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateAgendaRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Agenda actualizada exitosamente."
                                            ]
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/AgendaResource"
                                        }
                                    },
                                    "required": [
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            },
            "delete": {
                "operationId": "agendas.destroy",
                "summary": "Elimina la agenda especificada de la base de datos (soft delete)",
                "tags": [
                    "Agenda"
                ],
                "parameters": [
                    {
                        "name": "agenda",
                        "in": "path",
                        "required": true,
                        "description": "The agenda ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Soft delete",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Agenda eliminada exitosamente."
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/crm/agendas/{id}/restore": {
            "post": {
                "operationId": "agendas.restore",
                "summary": "Restaura una agenda eliminada (soft delete)",
                "tags": [
                    "Agenda"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Agenda restaurada exitosamente."
                                            ]
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/AgendaResource"
                                        }
                                    },
                                    "required": [
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/crm/agendas/{id}/force-delete": {
            "delete": {
                "operationId": "agendas.force-delete",
                "summary": "Elimina permanentemente una agenda",
                "tags": [
                    "Agenda"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Agenda eliminada permanentemente."
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/crm/agendas/trashed/list": {
            "get": {
                "operationId": "agendas.trashed",
                "summary": "Obtiene solo las agendas eliminadas (soft delete)",
                "tags": [
                    "Agenda"
                ],
                "parameters": [
                    {
                        "name": "sort_by",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_direction",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/AgendaResource"
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "current_page": {
                                                    "type": "string"
                                                },
                                                "last_page": {
                                                    "type": "string"
                                                },
                                                "per_page": {
                                                    "type": "string"
                                                },
                                                "total": {
                                                    "type": "string"
                                                },
                                                "from": {
                                                    "type": "string"
                                                },
                                                "to": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "current_page",
                                                "last_page",
                                                "per_page",
                                                "total",
                                                "from",
                                                "to"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/crm/agendas/filters/options": {
            "get": {
                "operationId": "agendas.filters",
                "summary": "Obtiene las opciones de filtros disponibles",
                "tags": [
                    "Agenda"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "status_options": {
                                                    "type": "array",
                                                    "prefixItems": [
                                                        {
                                                            "type": "string",
                                                            "enum": [
                                                                "Agendado"
                                                            ]
                                                        },
                                                        {
                                                            "type": "string",
                                                            "enum": [
                                                                "Asisti\u00f3"
                                                            ]
                                                        },
                                                        {
                                                            "type": "string",
                                                            "enum": [
                                                                "No asisti\u00f3"
                                                            ]
                                                        },
                                                        {
                                                            "type": "string",
                                                            "enum": [
                                                                "Reprogram\u00f3"
                                                            ]
                                                        },
                                                        {
                                                            "type": "string",
                                                            "enum": [
                                                                "Cancel\u00f3"
                                                            ]
                                                        }
                                                    ],
                                                    "minItems": 5,
                                                    "maxItems": 5,
                                                    "additionalItems": false
                                                },
                                                "jornada_options": {
                                                    "type": "object",
                                                    "properties": {
                                                        "am": {
                                                            "type": "string",
                                                            "enum": [
                                                                "AM"
                                                            ]
                                                        },
                                                        "pm": {
                                                            "type": "string",
                                                            "enum": [
                                                                "PM"
                                                            ]
                                                        }
                                                    },
                                                    "required": [
                                                        "am",
                                                        "pm"
                                                    ]
                                                },
                                                "referidos": {
                                                    "type": "string"
                                                },
                                                "agendadores": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "status_options",
                                                "jornada_options",
                                                "referidos",
                                                "agendadores"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/crm/agendas/statistics": {
            "get": {
                "operationId": "agendas.statistics",
                "summary": "Obtiene estad\u00edsticas de agendas",
                "tags": [
                    "Agenda"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "totales": {
                                                    "type": "object",
                                                    "properties": {
                                                        "total": {
                                                            "type": "string"
                                                        },
                                                        "activos": {
                                                            "type": "string"
                                                        },
                                                        "eliminados": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "total",
                                                        "activos",
                                                        "eliminados"
                                                    ]
                                                },
                                                "por_status": {
                                                    "type": "object",
                                                    "properties": {
                                                        "agendados": {
                                                            "type": "string"
                                                        },
                                                        "asistieron": {
                                                            "type": "string"
                                                        },
                                                        "no_asistieron": {
                                                            "type": "string"
                                                        },
                                                        "reprogramaron": {
                                                            "type": "string"
                                                        },
                                                        "cancelaron": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "agendados",
                                                        "asistieron",
                                                        "no_asistieron",
                                                        "reprogramaron",
                                                        "cancelaron"
                                                    ]
                                                },
                                                "por_jornada": {
                                                    "type": "string"
                                                },
                                                "por_agendador": {
                                                    "type": "string"
                                                },
                                                "por_fecha": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "totales",
                                                "por_status",
                                                "por_jornada",
                                                "por_agendador",
                                                "por_fecha"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/configuracion/areas": {
            "get": {
                "operationId": "areas.index",
                "summary": "Muestra una lista de las \u00e1reas",
                "tags": [
                    "Area"
                ],
                "parameters": [
                    {
                        "name": "sort_by",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_direction",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/AreaResource"
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "current_page": {
                                                    "type": "string"
                                                },
                                                "last_page": {
                                                    "type": "string"
                                                },
                                                "per_page": {
                                                    "type": "string"
                                                },
                                                "total": {
                                                    "type": "string"
                                                },
                                                "from": {
                                                    "type": "string"
                                                },
                                                "to": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "current_page",
                                                "last_page",
                                                "per_page",
                                                "total",
                                                "from",
                                                "to"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "post": {
                "operationId": "areas.store",
                "summary": "Almacena una nueva \u00e1rea en la base de datos",
                "tags": [
                    "Area"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreAreaRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "\u00c1rea creada exitosamente."
                                            ]
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/AreaResource"
                                        }
                                    },
                                    "required": [
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/configuracion/areas/{area}": {
            "get": {
                "operationId": "areas.show",
                "summary": "Muestra el \u00e1rea especificada",
                "tags": [
                    "Area"
                ],
                "parameters": [
                    {
                        "name": "area",
                        "in": "path",
                        "required": true,
                        "description": "The area ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/AreaResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "put": {
                "operationId": "areas.update",
                "summary": "Actualiza el \u00e1rea especificada en la base de datos",
                "tags": [
                    "Area"
                ],
                "parameters": [
                    {
                        "name": "area",
                        "in": "path",
                        "required": true,
                        "description": "The area ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "\u00c1rea actualizada exitosamente."
                                            ]
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/AreaResource"
                                        }
                                    },
                                    "required": [
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            },
            "delete": {
                "operationId": "areas.destroy",
                "summary": "Elimina el \u00e1rea especificada de la base de datos (soft delete)",
                "tags": [
                    "Area"
                ],
                "parameters": [
                    {
                        "name": "area",
                        "in": "path",
                        "required": true,
                        "description": "The area ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Soft delete",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "\u00c1rea eliminada exitosamente."
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/configuracion/areas/restore/{id}": {
            "post": {
                "operationId": "areas.restore",
                "summary": "Restaura un \u00e1rea eliminada (soft delete)",
                "tags": [
                    "Area"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "\u00c1rea restaurada exitosamente."
                                            ]
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/AreaResource"
                                        }
                                    },
                                    "required": [
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/configuracion/areas/force/{id}": {
            "delete": {
                "operationId": "areas.force-delete",
                "summary": "Elimina permanentemente un \u00e1rea",
                "tags": [
                    "Area"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "\u00c1rea eliminada permanentemente."
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/configuracion/areas/trashed": {
            "get": {
                "operationId": "areas.trashed",
                "summary": "Obtiene solo las \u00e1reas eliminadas (soft delete)",
                "tags": [
                    "Area"
                ],
                "parameters": [
                    {
                        "name": "sort_by",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_direction",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/AreaResource"
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "current_page": {
                                                    "type": "string"
                                                },
                                                "last_page": {
                                                    "type": "string"
                                                },
                                                "per_page": {
                                                    "type": "string"
                                                },
                                                "total": {
                                                    "type": "string"
                                                },
                                                "from": {
                                                    "type": "string"
                                                },
                                                "to": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "current_page",
                                                "last_page",
                                                "per_page",
                                                "total",
                                                "from",
                                                "to"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/configuracion/areas/filters/options": {
            "get": {
                "operationId": "areas.filters",
                "summary": "Obtiene las opciones de filtros disponibles",
                "tags": [
                    "Area"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "sedes": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "sedes"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/configuracion/areas/statistics": {
            "get": {
                "operationId": "areas.statistics",
                "summary": "Obtiene estad\u00edsticas de \u00e1reas",
                "tags": [
                    "Area"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "totales": {
                                                    "type": "object",
                                                    "properties": {
                                                        "total": {
                                                            "type": "string"
                                                        },
                                                        "activos": {
                                                            "type": "string"
                                                        },
                                                        "eliminados": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "total",
                                                        "activos",
                                                        "eliminados"
                                                    ]
                                                },
                                                "por_estado": {
                                                    "type": "object",
                                                    "properties": {
                                                        "activos": {
                                                            "type": "string"
                                                        },
                                                        "inactivos": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "activos",
                                                        "inactivos"
                                                    ]
                                                },
                                                "con_sedes": {
                                                    "type": "object",
                                                    "properties": {
                                                        "con_sedes": {
                                                            "type": "string"
                                                        },
                                                        "sin_sedes": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "con_sedes",
                                                        "sin_sedes"
                                                    ]
                                                },
                                                "por_sede": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "totales",
                                                "por_estado",
                                                "con_sedes",
                                                "por_sede"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/login": {
            "post": {
                "operationId": "auth.login",
                "tags": [
                    "Auth"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "password": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "email",
                                    "password"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Login successful"
                                            ]
                                        },
                                        "access_token": {
                                            "type": "string"
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "enum": [
                                                "Bearer"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message",
                                        "access_token",
                                        "token_type"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "operationId": "auth.logout",
                "tags": [
                    "Auth"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Cerr\u00f3 sesi\u00f3n exitosamente"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/user": {
            "get": {
                "operationId": "auth.user",
                "tags": [
                    "Auth"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/academico/cursos": {
            "get": {
                "operationId": "cursos.index",
                "summary": "Muestra una lista de los cursos",
                "tags": [
                    "Curso"
                ],
                "parameters": [
                    {
                        "name": "sort_by",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_direction",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/CursoResource"
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "current_page": {
                                                    "type": "string"
                                                },
                                                "last_page": {
                                                    "type": "string"
                                                },
                                                "per_page": {
                                                    "type": "string"
                                                },
                                                "total": {
                                                    "type": "string"
                                                },
                                                "from": {
                                                    "type": "string"
                                                },
                                                "to": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "current_page",
                                                "last_page",
                                                "per_page",
                                                "total",
                                                "from",
                                                "to"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "post": {
                "operationId": "cursos.store",
                "summary": "Almacena un nuevo curso en la base de datos",
                "tags": [
                    "Curso"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreCursoRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Curso creado exitosamente."
                                            ]
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/CursoResource"
                                        }
                                    },
                                    "required": [
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/academico/cursos/{curso}": {
            "get": {
                "operationId": "cursos.show",
                "summary": "Muestra el curso especificado",
                "tags": [
                    "Curso"
                ],
                "parameters": [
                    {
                        "name": "curso",
                        "in": "path",
                        "required": true,
                        "description": "The curso ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/CursoResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "put": {
                "operationId": "cursos.update",
                "summary": "Actualiza el curso especificado en la base de datos",
                "tags": [
                    "Curso"
                ],
                "parameters": [
                    {
                        "name": "curso",
                        "in": "path",
                        "required": true,
                        "description": "The curso ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateCursoRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Curso actualizado exitosamente."
                                            ]
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/CursoResource"
                                        }
                                    },
                                    "required": [
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            },
            "delete": {
                "operationId": "cursos.destroy",
                "summary": "Elimina el curso especificado de la base de datos (soft delete)",
                "tags": [
                    "Curso"
                ],
                "parameters": [
                    {
                        "name": "curso",
                        "in": "path",
                        "required": true,
                        "description": "The curso ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Soft delete",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Curso eliminado exitosamente."
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "No se puede eliminar el curso porque tiene estudiantes asociados."
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "message"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "No se puede eliminar el curso porque tiene referidos asociados."
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "message"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/academico/cursos/{id}/restore": {
            "post": {
                "operationId": "cursos.restore",
                "summary": "Restaura un curso eliminado (soft delete)",
                "tags": [
                    "Curso"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Curso restaurado exitosamente."
                                            ]
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/CursoResource"
                                        }
                                    },
                                    "required": [
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/academico/cursos/{id}/force-delete": {
            "delete": {
                "operationId": "cursos.force-delete",
                "summary": "Elimina permanentemente un curso",
                "tags": [
                    "Curso"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Curso eliminado permanentemente."
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "No se puede eliminar permanentemente el curso porque tiene estudiantes asociados."
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "message"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "No se puede eliminar permanentemente el curso porque tiene referidos asociados."
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "message"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/academico/cursos/trashed": {
            "get": {
                "operationId": "cursos.trashed",
                "summary": "Obtiene solo los cursos eliminados (soft delete)",
                "tags": [
                    "Curso"
                ],
                "parameters": [
                    {
                        "name": "sort_by",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_direction",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/CursoResource"
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "current_page": {
                                                    "type": "string"
                                                },
                                                "last_page": {
                                                    "type": "string"
                                                },
                                                "per_page": {
                                                    "type": "string"
                                                },
                                                "total": {
                                                    "type": "string"
                                                },
                                                "from": {
                                                    "type": "string"
                                                },
                                                "to": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "current_page",
                                                "last_page",
                                                "per_page",
                                                "total",
                                                "from",
                                                "to"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/academico/cursos/filters": {
            "get": {
                "operationId": "cursos.filters",
                "summary": "Obtiene las opciones de filtros disponibles",
                "tags": [
                    "Curso"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "status_options": {
                                                    "type": "array",
                                                    "prefixItems": [
                                                        {
                                                            "type": "string",
                                                            "enum": [
                                                                "Inactivo"
                                                            ]
                                                        },
                                                        {
                                                            "type": "string",
                                                            "enum": [
                                                                "Activo"
                                                            ]
                                                        }
                                                    ],
                                                    "minItems": 2,
                                                    "maxItems": 2,
                                                    "additionalItems": false
                                                },
                                                "tipo_options": {
                                                    "type": "array",
                                                    "prefixItems": [
                                                        {
                                                            "type": "string",
                                                            "enum": [
                                                                "Curso Pr\u00e1ctico"
                                                            ]
                                                        },
                                                        {
                                                            "type": "string",
                                                            "enum": [
                                                                "T\u00e9cnico Laboral"
                                                            ]
                                                        }
                                                    ],
                                                    "minItems": 2,
                                                    "maxItems": 2,
                                                    "additionalItems": false
                                                },
                                                "cursos": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "status_options",
                                                "tipo_options",
                                                "cursos"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/academico/cursos/statistics": {
            "get": {
                "operationId": "cursos.statistics",
                "summary": "Obtiene estad\u00edsticas de cursos",
                "tags": [
                    "Curso"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "totales": {
                                                    "type": "object",
                                                    "properties": {
                                                        "total": {
                                                            "type": "string"
                                                        },
                                                        "activos": {
                                                            "type": "string"
                                                        },
                                                        "eliminados": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "total",
                                                        "activos",
                                                        "eliminados"
                                                    ]
                                                },
                                                "por_status": {
                                                    "type": "object",
                                                    "properties": {
                                                        "activos": {
                                                            "type": "string"
                                                        },
                                                        "inactivos": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "activos",
                                                        "inactivos"
                                                    ]
                                                },
                                                "por_duracion": {
                                                    "type": "string"
                                                },
                                                "por_tipo": {
                                                    "type": "string"
                                                },
                                                "con_referidos": {
                                                    "type": "string"
                                                },
                                                "con_estudiantes": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "totales",
                                                "por_status",
                                                "por_duracion",
                                                "por_tipo",
                                                "con_referidos",
                                                "con_estudiantes"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/configuracion/horarios": {
            "get": {
                "operationId": "horarios.index",
                "description": "Permite filtrar horarios por sede, \u00e1rea, d\u00eda, tipo, per\u00edodo y estado.\nSoporta paginaci\u00f3n y ordenamiento personalizado.\nPuede incluir relaciones con sede y \u00e1rea.",
                "summary": "Muestra una lista de los horarios",
                "tags": [
                    "Horario"
                ],
                "parameters": [
                    {
                        "name": "sort_by",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_direction",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/HorarioResource"
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "current_page": {
                                                    "type": "string"
                                                },
                                                "last_page": {
                                                    "type": "string"
                                                },
                                                "per_page": {
                                                    "type": "string"
                                                },
                                                "total": {
                                                    "type": "string"
                                                },
                                                "from": {
                                                    "type": "string"
                                                },
                                                "to": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "current_page",
                                                "last_page",
                                                "per_page",
                                                "total",
                                                "from",
                                                "to"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "post": {
                "operationId": "horarios.store",
                "description": "Crea un nuevo registro de horario con los datos proporcionados.\nEl horario se crea con estado activo por defecto.\nIncluye validaci\u00f3n de datos mediante StoreHorarioRequest.",
                "summary": "Almacena un nuevo horario en la base de datos",
                "tags": [
                    "Horario"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreHorarioRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Horario creado exitosamente."
                                            ]
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/HorarioResource"
                                        }
                                    },
                                    "required": [
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/configuracion/horarios/{horario}": {
            "get": {
                "operationId": "horarios.show",
                "description": "Obtiene los detalles de un horario espec\u00edfico.\nPuede incluir relaciones con sede y \u00e1rea.",
                "summary": "Muestra el horario especificado",
                "tags": [
                    "Horario"
                ],
                "parameters": [
                    {
                        "name": "horario",
                        "in": "path",
                        "required": true,
                        "description": "Horario a mostrar",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/HorarioResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "put": {
                "operationId": "horarios.update",
                "description": "Modifica los datos de un horario existente.\nIncluye validaci\u00f3n de datos mediante UpdateHorarioRequest.\nNo permite modificar el estado (status) directamente.",
                "summary": "Actualiza el horario especificado en la base de datos",
                "tags": [
                    "Horario"
                ],
                "parameters": [
                    {
                        "name": "horario",
                        "in": "path",
                        "required": true,
                        "description": "Horario a actualizar",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateHorarioRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Horario actualizado exitosamente."
                                            ]
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/HorarioResource"
                                        }
                                    },
                                    "required": [
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            },
            "delete": {
                "operationId": "horarios.destroy",
                "summary": "Elimina el horario especificado de la base de datos (soft delete)",
                "tags": [
                    "Horario"
                ],
                "parameters": [
                    {
                        "name": "horario",
                        "in": "path",
                        "required": true,
                        "description": "The horario ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Soft delete",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Horario eliminado exitosamente."
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/configuracion/horarios/restore/{id}": {
            "post": {
                "operationId": "horarios.restore",
                "summary": "Restaura un horario eliminado (soft delete)",
                "tags": [
                    "Horario"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Horario restaurado exitosamente."
                                            ]
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/HorarioResource"
                                        }
                                    },
                                    "required": [
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/configuracion/horarios/force/{id}": {
            "delete": {
                "operationId": "horarios.force-delete",
                "summary": "Elimina permanentemente un horario",
                "tags": [
                    "Horario"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Horario eliminado permanentemente."
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/configuracion/horarios/trashed": {
            "get": {
                "operationId": "horarios.trashed",
                "summary": "Obtiene solo los horarios eliminados (soft delete)",
                "tags": [
                    "Horario"
                ],
                "parameters": [
                    {
                        "name": "sort_by",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_direction",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/HorarioResource"
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "current_page": {
                                                    "type": "string"
                                                },
                                                "last_page": {
                                                    "type": "string"
                                                },
                                                "per_page": {
                                                    "type": "string"
                                                },
                                                "total": {
                                                    "type": "string"
                                                },
                                                "from": {
                                                    "type": "string"
                                                },
                                                "to": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "current_page",
                                                "last_page",
                                                "per_page",
                                                "total",
                                                "from",
                                                "to"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/configuracion/horarios/filters/options": {
            "get": {
                "operationId": "horarios.filters",
                "description": "Proporciona las opciones disponibles para filtrar horarios.\nIncluye listas de sedes, \u00e1reas, d\u00edas de la semana, tipos y per\u00edodos.",
                "summary": "Obtiene las opciones de filtros disponibles",
                "tags": [
                    "Horario"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "sedes": {
                                                    "type": "string"
                                                },
                                                "areas": {
                                                    "type": "string"
                                                },
                                                "dias": {
                                                    "type": "object",
                                                    "properties": {
                                                        "lunes": {
                                                            "type": "string",
                                                            "enum": [
                                                                "Lunes"
                                                            ]
                                                        },
                                                        "martes": {
                                                            "type": "string",
                                                            "enum": [
                                                                "Martes"
                                                            ]
                                                        },
                                                        "mi\u00e9rcoles": {
                                                            "type": "string",
                                                            "enum": [
                                                                "Mi\u00e9rcoles"
                                                            ]
                                                        },
                                                        "jueves": {
                                                            "type": "string",
                                                            "enum": [
                                                                "Jueves"
                                                            ]
                                                        },
                                                        "viernes": {
                                                            "type": "string",
                                                            "enum": [
                                                                "Viernes"
                                                            ]
                                                        },
                                                        "s\u00e1bado": {
                                                            "type": "string",
                                                            "enum": [
                                                                "S\u00e1bado"
                                                            ]
                                                        },
                                                        "domingo": {
                                                            "type": "string",
                                                            "enum": [
                                                                "Domingo"
                                                            ]
                                                        }
                                                    },
                                                    "required": [
                                                        "lunes",
                                                        "martes",
                                                        "mi\u00e9rcoles",
                                                        "jueves",
                                                        "viernes",
                                                        "s\u00e1bado",
                                                        "domingo"
                                                    ]
                                                },
                                                "tipos": {
                                                    "type": "array",
                                                    "prefixItems": [
                                                        {
                                                            "type": "object",
                                                            "properties": {
                                                                "value": {
                                                                    "type": "boolean"
                                                                },
                                                                "label": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "Horario de Sede"
                                                                    ]
                                                                }
                                                            },
                                                            "required": [
                                                                "value",
                                                                "label"
                                                            ]
                                                        },
                                                        {
                                                            "type": "object",
                                                            "properties": {
                                                                "value": {
                                                                    "type": "boolean"
                                                                },
                                                                "label": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "Horario de Grupo"
                                                                    ]
                                                                }
                                                            },
                                                            "required": [
                                                                "value",
                                                                "label"
                                                            ]
                                                        }
                                                    ],
                                                    "minItems": 2,
                                                    "maxItems": 2,
                                                    "additionalItems": false
                                                },
                                                "periodos": {
                                                    "type": "array",
                                                    "prefixItems": [
                                                        {
                                                            "type": "object",
                                                            "properties": {
                                                                "value": {
                                                                    "type": "boolean"
                                                                },
                                                                "label": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "Inicio"
                                                                    ]
                                                                }
                                                            },
                                                            "required": [
                                                                "value",
                                                                "label"
                                                            ]
                                                        },
                                                        {
                                                            "type": "object",
                                                            "properties": {
                                                                "value": {
                                                                    "type": "boolean"
                                                                },
                                                                "label": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "Fin"
                                                                    ]
                                                                }
                                                            },
                                                            "required": [
                                                                "value",
                                                                "label"
                                                            ]
                                                        }
                                                    ],
                                                    "minItems": 2,
                                                    "maxItems": 2,
                                                    "additionalItems": false
                                                }
                                            },
                                            "required": [
                                                "sedes",
                                                "areas",
                                                "dias",
                                                "tipos",
                                                "periodos"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/configuracion/horarios/statistics": {
            "get": {
                "operationId": "horarios.statistics",
                "description": "Proporciona estad\u00edsticas detalladas sobre los horarios registrados.\nIncluye totales, distribuci\u00f3n por sede, d\u00eda y tipo.",
                "summary": "Obtiene estad\u00edsticas de horarios",
                "tags": [
                    "Horario"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "totales": {
                                                    "type": "object",
                                                    "properties": {
                                                        "total": {
                                                            "type": "string"
                                                        },
                                                        "activos": {
                                                            "type": "string"
                                                        },
                                                        "eliminados": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "total",
                                                        "activos",
                                                        "eliminados"
                                                    ]
                                                },
                                                "por_sede": {
                                                    "type": "string"
                                                },
                                                "por_dia": {
                                                    "type": "string"
                                                },
                                                "por_tipo": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "totales",
                                                "por_sede",
                                                "por_dia",
                                                "por_tipo"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/academico/modulos": {
            "get": {
                "operationId": "modulos.index",
                "summary": "Muestra una lista de los m\u00f3dulos",
                "tags": [
                    "Modulo"
                ],
                "parameters": [
                    {
                        "name": "sort_by",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_direction",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ModuloResource"
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "current_page": {
                                                    "type": "string"
                                                },
                                                "last_page": {
                                                    "type": "string"
                                                },
                                                "per_page": {
                                                    "type": "string"
                                                },
                                                "total": {
                                                    "type": "string"
                                                },
                                                "from": {
                                                    "type": "string"
                                                },
                                                "to": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "current_page",
                                                "last_page",
                                                "per_page",
                                                "total",
                                                "from",
                                                "to"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "post": {
                "operationId": "modulos.store",
                "summary": "Almacena un nuevo m\u00f3dulo en la base de datos",
                "tags": [
                    "Modulo"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreModuloRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "M\u00f3dulo creado exitosamente."
                                            ]
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/ModuloResource"
                                        }
                                    },
                                    "required": [
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/academico/modulos/{modulo}": {
            "get": {
                "operationId": "modulos.show",
                "summary": "Muestra el m\u00f3dulo especificado",
                "tags": [
                    "Modulo"
                ],
                "parameters": [
                    {
                        "name": "modulo",
                        "in": "path",
                        "required": true,
                        "description": "The modulo ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ModuloResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "put": {
                "operationId": "modulos.update",
                "summary": "Actualiza el m\u00f3dulo especificado en la base de datos",
                "tags": [
                    "Modulo"
                ],
                "parameters": [
                    {
                        "name": "modulo",
                        "in": "path",
                        "required": true,
                        "description": "The modulo ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateModuloRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "M\u00f3dulo actualizado exitosamente."
                                            ]
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/ModuloResource"
                                        }
                                    },
                                    "required": [
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            },
            "delete": {
                "operationId": "modulos.destroy",
                "summary": "Elimina el m\u00f3dulo especificado de la base de datos (soft delete)",
                "tags": [
                    "Modulo"
                ],
                "parameters": [
                    {
                        "name": "modulo",
                        "in": "path",
                        "required": true,
                        "description": "The modulo ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Soft delete",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "M\u00f3dulo eliminado exitosamente."
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "No se puede eliminar el m\u00f3dulo porque tiene cursos asociados."
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/academico/modulos/{id}/restore": {
            "post": {
                "operationId": "modulos.restore",
                "summary": "Restaura un m\u00f3dulo eliminado (soft delete)",
                "tags": [
                    "Modulo"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "M\u00f3dulo restaurado exitosamente."
                                            ]
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/ModuloResource"
                                        }
                                    },
                                    "required": [
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/academico/modulos/{id}/force-delete": {
            "delete": {
                "operationId": "modulos.force-delete",
                "summary": "Elimina permanentemente un m\u00f3dulo",
                "tags": [
                    "Modulo"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "M\u00f3dulo eliminado permanentemente."
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "No se puede eliminar permanentemente el m\u00f3dulo porque tiene cursos asociados."
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/academico/modulos/trashed": {
            "get": {
                "operationId": "modulos.trashed",
                "summary": "Obtiene solo los m\u00f3dulos eliminados (soft delete)",
                "tags": [
                    "Modulo"
                ],
                "parameters": [
                    {
                        "name": "sort_by",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_direction",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ModuloResource"
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "current_page": {
                                                    "type": "string"
                                                },
                                                "last_page": {
                                                    "type": "string"
                                                },
                                                "per_page": {
                                                    "type": "string"
                                                },
                                                "total": {
                                                    "type": "string"
                                                },
                                                "from": {
                                                    "type": "string"
                                                },
                                                "to": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "current_page",
                                                "last_page",
                                                "per_page",
                                                "total",
                                                "from",
                                                "to"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/academico/modulos/filters": {
            "get": {
                "operationId": "modulos.filters",
                "summary": "Obtiene las opciones de filtros disponibles",
                "tags": [
                    "Modulo"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "status_options": {
                                                    "type": "array",
                                                    "prefixItems": [
                                                        {
                                                            "type": "string",
                                                            "enum": [
                                                                "Inactivo"
                                                            ]
                                                        },
                                                        {
                                                            "type": "string",
                                                            "enum": [
                                                                "Activo"
                                                            ]
                                                        }
                                                    ],
                                                    "minItems": 2,
                                                    "maxItems": 2,
                                                    "additionalItems": false
                                                },
                                                "modulos": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "status_options",
                                                "modulos"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/academico/modulos/statistics": {
            "get": {
                "operationId": "modulos.statistics",
                "summary": "Obtiene estad\u00edsticas de m\u00f3dulos",
                "tags": [
                    "Modulo"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "totales": {
                                                    "type": "object",
                                                    "properties": {
                                                        "total": {
                                                            "type": "string"
                                                        },
                                                        "activos": {
                                                            "type": "string"
                                                        },
                                                        "eliminados": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "total",
                                                        "activos",
                                                        "eliminados"
                                                    ]
                                                },
                                                "por_status": {
                                                    "type": "object",
                                                    "properties": {
                                                        "activos": {
                                                            "type": "string"
                                                        },
                                                        "inactivos": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "activos",
                                                        "inactivos"
                                                    ]
                                                },
                                                "con_cursos": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "totales",
                                                "por_status",
                                                "con_cursos"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/configuracion/poblaciones": {
            "get": {
                "operationId": "poblaciones.index",
                "summary": "Muestra una lista de las poblaciones",
                "tags": [
                    "Poblacion"
                ],
                "parameters": [
                    {
                        "name": "sort_by",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_direction",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PoblacionResource"
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "current_page": {
                                                    "type": "string"
                                                },
                                                "last_page": {
                                                    "type": "string"
                                                },
                                                "per_page": {
                                                    "type": "string"
                                                },
                                                "total": {
                                                    "type": "string"
                                                },
                                                "from": {
                                                    "type": "string"
                                                },
                                                "to": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "current_page",
                                                "last_page",
                                                "per_page",
                                                "total",
                                                "from",
                                                "to"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/configuracion/poblaciones/{poblacion}": {
            "get": {
                "operationId": "poblaciones.show",
                "summary": "Muestra la poblaci\u00f3n especificada",
                "tags": [
                    "Poblacion"
                ],
                "parameters": [
                    {
                        "name": "poblacion",
                        "in": "path",
                        "required": true,
                        "description": "The poblacion ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/PoblacionResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/configuracion/poblaciones/filters/options": {
            "get": {
                "operationId": "poblaciones.filters",
                "summary": "Obtiene las opciones de filtros disponibles",
                "tags": [
                    "Poblacion"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "paises": {
                                                    "type": "string"
                                                },
                                                "provincias": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "paises",
                                                "provincias"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/configuracion/poblaciones/statistics": {
            "get": {
                "operationId": "poblaciones.statistics",
                "summary": "Obtiene estad\u00edsticas de poblaciones",
                "tags": [
                    "Poblacion"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "totales": {
                                                    "type": "object",
                                                    "properties": {
                                                        "total": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "total"
                                                    ]
                                                },
                                                "por_pais": {
                                                    "type": "string"
                                                },
                                                "por_provincia": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "totales",
                                                "por_pais",
                                                "por_provincia"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/crm/referidos": {
            "get": {
                "operationId": "referidos.index",
                "summary": "Muestra una lista de los referidos",
                "tags": [
                    "Referido"
                ],
                "parameters": [
                    {
                        "name": "sort_by",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_direction",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ReferidoResource"
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "current_page": {
                                                    "type": "string"
                                                },
                                                "last_page": {
                                                    "type": "string"
                                                },
                                                "per_page": {
                                                    "type": "string"
                                                },
                                                "total": {
                                                    "type": "string"
                                                },
                                                "from": {
                                                    "type": "string"
                                                },
                                                "to": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "current_page",
                                                "last_page",
                                                "per_page",
                                                "total",
                                                "from",
                                                "to"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "post": {
                "operationId": "referidos.store",
                "summary": "Almacena un nuevo referido en la base de datos",
                "tags": [
                    "Referido"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreReferidoRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Referido creado exitosamente."
                                            ]
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/ReferidoResource"
                                        }
                                    },
                                    "required": [
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/crm/referidos/{referido}": {
            "get": {
                "operationId": "referidos.show",
                "summary": "Muestra el referido especificado",
                "tags": [
                    "Referido"
                ],
                "parameters": [
                    {
                        "name": "referido",
                        "in": "path",
                        "required": true,
                        "description": "The referido ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ReferidoResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "put": {
                "operationId": "referidos.update",
                "summary": "Actualiza el referido especificado en la base de datos",
                "tags": [
                    "Referido"
                ],
                "parameters": [
                    {
                        "name": "referido",
                        "in": "path",
                        "required": true,
                        "description": "The referido ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateReferidoRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Referido actualizado exitosamente."
                                            ]
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/ReferidoResource"
                                        }
                                    },
                                    "required": [
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            },
            "delete": {
                "operationId": "referidos.destroy",
                "summary": "Elimina el referido especificado de la base de datos (soft delete)",
                "tags": [
                    "Referido"
                ],
                "parameters": [
                    {
                        "name": "referido",
                        "in": "path",
                        "required": true,
                        "description": "The referido ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Soft delete",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Referido eliminado exitosamente."
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "No se puede eliminar el referido porque tiene seguimientos asociados."
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/crm/referidos/{id}/restore": {
            "post": {
                "operationId": "referidos.restore",
                "summary": "Restaura un referido eliminado (soft delete)",
                "tags": [
                    "Referido"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Referido restaurado exitosamente."
                                            ]
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/ReferidoResource"
                                        }
                                    },
                                    "required": [
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/crm/referidos/{id}/force-delete": {
            "delete": {
                "operationId": "referidos.force-delete",
                "summary": "Elimina permanentemente un referido",
                "tags": [
                    "Referido"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Referido eliminado permanentemente."
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "No se puede eliminar permanentemente el referido porque tiene seguimientos asociados."
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/crm/referidos/trashed/list": {
            "get": {
                "operationId": "referidos.trashed",
                "summary": "Obtiene solo los referidos eliminados (soft delete)",
                "tags": [
                    "Referido"
                ],
                "parameters": [
                    {
                        "name": "sort_by",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_direction",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ReferidoResource"
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "current_page": {
                                                    "type": "string"
                                                },
                                                "last_page": {
                                                    "type": "string"
                                                },
                                                "per_page": {
                                                    "type": "string"
                                                },
                                                "total": {
                                                    "type": "string"
                                                },
                                                "from": {
                                                    "type": "string"
                                                },
                                                "to": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "current_page",
                                                "last_page",
                                                "per_page",
                                                "total",
                                                "from",
                                                "to"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/crm/referidos/filters/options": {
            "get": {
                "operationId": "referidos.filters",
                "summary": "Obtiene las opciones de filtros disponibles",
                "tags": [
                    "Referido"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "status_options": {
                                                    "type": "array",
                                                    "prefixItems": [
                                                        {
                                                            "type": "string",
                                                            "enum": [
                                                                "Creado"
                                                            ]
                                                        },
                                                        {
                                                            "type": "string",
                                                            "enum": [
                                                                "Interesado"
                                                            ]
                                                        },
                                                        {
                                                            "type": "string",
                                                            "enum": [
                                                                "Pendiente por matricular"
                                                            ]
                                                        },
                                                        {
                                                            "type": "string",
                                                            "enum": [
                                                                "Matriculado"
                                                            ]
                                                        },
                                                        {
                                                            "type": "string",
                                                            "enum": [
                                                                "Declinado"
                                                            ]
                                                        }
                                                    ],
                                                    "minItems": 5,
                                                    "maxItems": 5,
                                                    "additionalItems": false
                                                },
                                                "ciudades": {
                                                    "type": "string"
                                                },
                                                "cursos": {
                                                    "type": "string"
                                                },
                                                "gestores": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "status_options",
                                                "ciudades",
                                                "cursos",
                                                "gestores"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/crm/referidos/statistics": {
            "get": {
                "operationId": "referidos.statistics",
                "summary": "Obtiene estad\u00edsticas de referidos",
                "tags": [
                    "Referido"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "totales": {
                                                    "type": "object",
                                                    "properties": {
                                                        "total": {
                                                            "type": "string"
                                                        },
                                                        "activos": {
                                                            "type": "string"
                                                        },
                                                        "eliminados": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "total",
                                                        "activos",
                                                        "eliminados"
                                                    ]
                                                },
                                                "por_status": {
                                                    "type": "object",
                                                    "properties": {
                                                        "creados": {
                                                            "type": "string"
                                                        },
                                                        "interesados": {
                                                            "type": "string"
                                                        },
                                                        "pendientes": {
                                                            "type": "string"
                                                        },
                                                        "matriculados": {
                                                            "type": "string"
                                                        },
                                                        "declinados": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "creados",
                                                        "interesados",
                                                        "pendientes",
                                                        "matriculados",
                                                        "declinados"
                                                    ]
                                                },
                                                "por_ciudad": {
                                                    "type": "string"
                                                },
                                                "por_curso": {
                                                    "type": "string"
                                                },
                                                "por_gestor": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "totales",
                                                "por_status",
                                                "por_ciudad",
                                                "por_curso",
                                                "por_gestor"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/configuracion/sedes": {
            "get": {
                "operationId": "sedes.index",
                "summary": "Muestra una lista de las sedes",
                "tags": [
                    "Sede"
                ],
                "parameters": [
                    {
                        "name": "sort_by",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_direction",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/SedeResource"
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "current_page": {
                                                    "type": "string"
                                                },
                                                "last_page": {
                                                    "type": "string"
                                                },
                                                "per_page": {
                                                    "type": "string"
                                                },
                                                "total": {
                                                    "type": "string"
                                                },
                                                "from": {
                                                    "type": "string"
                                                },
                                                "to": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "current_page",
                                                "last_page",
                                                "per_page",
                                                "total",
                                                "from",
                                                "to"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "post": {
                "operationId": "sedes.store",
                "summary": "Almacena una nueva sede en la base de datos",
                "tags": [
                    "Sede"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreSedeRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Sede creada exitosamente."
                                            ]
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/SedeResource"
                                        }
                                    },
                                    "required": [
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/configuracion/sedes/{sede}": {
            "get": {
                "operationId": "sedes.show",
                "summary": "Muestra la sede especificada",
                "tags": [
                    "Sede"
                ],
                "parameters": [
                    {
                        "name": "sede",
                        "in": "path",
                        "required": true,
                        "description": "The sede ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/SedeResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "put": {
                "operationId": "sedes.update",
                "summary": "Actualiza la sede especificada en la base de datos",
                "tags": [
                    "Sede"
                ],
                "parameters": [
                    {
                        "name": "sede",
                        "in": "path",
                        "required": true,
                        "description": "The sede ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateSedeRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Sede actualizada exitosamente."
                                            ]
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/SedeResource"
                                        }
                                    },
                                    "required": [
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            },
            "delete": {
                "operationId": "sedes.destroy",
                "summary": "Elimina la sede especificada de la base de datos (soft delete)",
                "tags": [
                    "Sede"
                ],
                "parameters": [
                    {
                        "name": "sede",
                        "in": "path",
                        "required": true,
                        "description": "The sede ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Soft delete",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Sede eliminada exitosamente."
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/configuracion/sedes/restore/{id}": {
            "post": {
                "operationId": "sedes.restore",
                "summary": "Restaura una sede eliminada (soft delete)",
                "tags": [
                    "Sede"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Sede restaurada exitosamente."
                                            ]
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/SedeResource"
                                        }
                                    },
                                    "required": [
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/configuracion/sedes/force/{id}": {
            "delete": {
                "operationId": "sedes.force-delete",
                "summary": "Elimina permanentemente una sede",
                "tags": [
                    "Sede"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Sede eliminada permanentemente."
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/configuracion/sedes/trashed": {
            "get": {
                "operationId": "sedes.trashed",
                "summary": "Obtiene solo las sedes eliminadas (soft delete)",
                "tags": [
                    "Sede"
                ],
                "parameters": [
                    {
                        "name": "sort_by",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_direction",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/SedeResource"
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "current_page": {
                                                    "type": "string"
                                                },
                                                "last_page": {
                                                    "type": "string"
                                                },
                                                "per_page": {
                                                    "type": "string"
                                                },
                                                "total": {
                                                    "type": "string"
                                                },
                                                "from": {
                                                    "type": "string"
                                                },
                                                "to": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "current_page",
                                                "last_page",
                                                "per_page",
                                                "total",
                                                "from",
                                                "to"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/configuracion/sedes/filters/options": {
            "get": {
                "operationId": "sedes.filters",
                "summary": "Obtiene las opciones de filtros disponibles",
                "tags": [
                    "Sede"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "poblaciones": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "poblaciones"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/configuracion/sedes/statistics": {
            "get": {
                "operationId": "sedes.statistics",
                "summary": "Obtiene estad\u00edsticas de sedes",
                "tags": [
                    "Sede"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "totales": {
                                                    "type": "object",
                                                    "properties": {
                                                        "total": {
                                                            "type": "string"
                                                        },
                                                        "activos": {
                                                            "type": "string"
                                                        },
                                                        "eliminados": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "total",
                                                        "activos",
                                                        "eliminados"
                                                    ]
                                                },
                                                "por_poblacion": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "totales",
                                                "por_poblacion"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/crm/seguimientos": {
            "get": {
                "operationId": "seguimientos.index",
                "summary": "Muestra una lista de los seguimientos",
                "tags": [
                    "Seguimiento"
                ],
                "parameters": [
                    {
                        "name": "sort_by",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "default": "fecha"
                        }
                    },
                    {
                        "name": "sort_direction",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "default": "desc"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/SeguimientoResource"
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "current_page": {
                                                    "type": "string"
                                                },
                                                "last_page": {
                                                    "type": "string"
                                                },
                                                "per_page": {
                                                    "type": "string"
                                                },
                                                "total": {
                                                    "type": "string"
                                                },
                                                "from": {
                                                    "type": "string"
                                                },
                                                "to": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "current_page",
                                                "last_page",
                                                "per_page",
                                                "total",
                                                "from",
                                                "to"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "post": {
                "operationId": "seguimientos.store",
                "summary": "Crea un nuevo seguimiento en el sistema",
                "tags": [
                    "Seguimiento"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreSeguimientoRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Seguimiento creado exitosamente."
                                            ]
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/SeguimientoResource"
                                        }
                                    },
                                    "required": [
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            }
        },
        "/crm/seguimientos/{seguimiento}": {
            "get": {
                "operationId": "seguimientos.show",
                "summary": "Muestra un seguimiento espec\u00edfico con sus relaciones",
                "tags": [
                    "Seguimiento"
                ],
                "parameters": [
                    {
                        "name": "seguimiento",
                        "in": "path",
                        "required": true,
                        "description": "The seguimiento ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/SeguimientoResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "put": {
                "operationId": "seguimientos.update",
                "summary": "Actualiza un seguimiento existente",
                "tags": [
                    "Seguimiento"
                ],
                "parameters": [
                    {
                        "name": "seguimiento",
                        "in": "path",
                        "required": true,
                        "description": "The seguimiento ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateSeguimientoRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Seguimiento actualizado exitosamente."
                                            ]
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/SeguimientoResource"
                                        }
                                    },
                                    "required": [
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "delete": {
                "operationId": "seguimientos.destroy",
                "summary": "Elimina un seguimiento (soft delete)",
                "tags": [
                    "Seguimiento"
                ],
                "parameters": [
                    {
                        "name": "seguimiento",
                        "in": "path",
                        "required": true,
                        "description": "The seguimiento ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Soft delete",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Seguimiento eliminado exitosamente."
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/crm/seguimientos/{id}/restore": {
            "post": {
                "operationId": "seguimientos.restore",
                "summary": "Restaura un seguimiento eliminado (soft delete)",
                "tags": [
                    "Seguimiento"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "ID del seguimiento a restaurar",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Seguimiento restaurado exitosamente."
                                            ]
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/SeguimientoResource"
                                        }
                                    },
                                    "required": [
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/crm/seguimientos/{id}/force-delete": {
            "delete": {
                "operationId": "seguimientos.force-delete",
                "summary": "Elimina permanentemente un seguimiento",
                "tags": [
                    "Seguimiento"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "ID del seguimiento a eliminar permanentemente",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Seguimiento eliminado permanentemente."
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/crm/seguimientos/by-referido/{referidoId}": {
            "get": {
                "operationId": "seguimientos.by-referido",
                "summary": "Obtiene todos los seguimientos de un referido espec\u00edfico",
                "tags": [
                    "Seguimiento"
                ],
                "parameters": [
                    {
                        "name": "referidoId",
                        "in": "path",
                        "required": true,
                        "description": "ID del referido",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "default": "fecha"
                        }
                    },
                    {
                        "name": "sort_direction",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "default": "desc"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/SeguimientoResource"
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "current_page": {
                                                    "type": "string"
                                                },
                                                "last_page": {
                                                    "type": "string"
                                                },
                                                "per_page": {
                                                    "type": "string"
                                                },
                                                "total": {
                                                    "type": "string"
                                                },
                                                "from": {
                                                    "type": "string"
                                                },
                                                "to": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "current_page",
                                                "last_page",
                                                "per_page",
                                                "total",
                                                "from",
                                                "to"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/crm/seguimientos/by-seguidor/{seguidorId}": {
            "get": {
                "operationId": "seguimientos.by-seguidor",
                "summary": "Obtiene todos los seguimientos realizados por un seguidor espec\u00edfico",
                "tags": [
                    "Seguimiento"
                ],
                "parameters": [
                    {
                        "name": "seguidorId",
                        "in": "path",
                        "required": true,
                        "description": "ID del seguidor",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "default": "fecha"
                        }
                    },
                    {
                        "name": "sort_direction",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "default": "desc"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/SeguimientoResource"
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "current_page": {
                                                    "type": "string"
                                                },
                                                "last_page": {
                                                    "type": "string"
                                                },
                                                "per_page": {
                                                    "type": "string"
                                                },
                                                "total": {
                                                    "type": "string"
                                                },
                                                "from": {
                                                    "type": "string"
                                                },
                                                "to": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "current_page",
                                                "last_page",
                                                "per_page",
                                                "total",
                                                "from",
                                                "to"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/academico/topicos": {
            "get": {
                "operationId": "topicos.index",
                "summary": "Muestra una lista de los t\u00f3picos",
                "tags": [
                    "Topico"
                ],
                "parameters": [
                    {
                        "name": "sort_by",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_direction",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/TopicoResource"
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "current_page": {
                                                    "type": "string"
                                                },
                                                "last_page": {
                                                    "type": "string"
                                                },
                                                "per_page": {
                                                    "type": "string"
                                                },
                                                "total": {
                                                    "type": "string"
                                                },
                                                "from": {
                                                    "type": "string"
                                                },
                                                "to": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "current_page",
                                                "last_page",
                                                "per_page",
                                                "total",
                                                "from",
                                                "to"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "post": {
                "operationId": "topicos.store",
                "summary": "Almacena un nuevo t\u00f3pico en la base de datos",
                "tags": [
                    "Topico"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreTopicoRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "T\u00f3pico creado exitosamente."
                                            ]
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/TopicoResource"
                                        }
                                    },
                                    "required": [
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/academico/topicos/{topico}": {
            "get": {
                "operationId": "topicos.show",
                "summary": "Muestra el t\u00f3pico especificado",
                "tags": [
                    "Topico"
                ],
                "parameters": [
                    {
                        "name": "topico",
                        "in": "path",
                        "required": true,
                        "description": "The topico ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/TopicoResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "put": {
                "operationId": "topicos.update",
                "summary": "Actualiza el t\u00f3pico especificado en la base de datos",
                "tags": [
                    "Topico"
                ],
                "parameters": [
                    {
                        "name": "topico",
                        "in": "path",
                        "required": true,
                        "description": "The topico ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateTopicoRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "T\u00f3pico actualizado exitosamente."
                                            ]
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/TopicoResource"
                                        }
                                    },
                                    "required": [
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            },
            "delete": {
                "operationId": "topicos.destroy",
                "summary": "Elimina el t\u00f3pico especificado de la base de datos (soft delete)",
                "tags": [
                    "Topico"
                ],
                "parameters": [
                    {
                        "name": "topico",
                        "in": "path",
                        "required": true,
                        "description": "The topico ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Soft delete",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "T\u00f3pico eliminado exitosamente."
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "No se puede eliminar el t\u00f3pico porque tiene m\u00f3dulos asociados."
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/academico/topicos/{id}/restore": {
            "post": {
                "operationId": "topicos.restore",
                "summary": "Restaura un t\u00f3pico eliminado (soft delete)",
                "tags": [
                    "Topico"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "T\u00f3pico restaurado exitosamente."
                                            ]
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/TopicoResource"
                                        }
                                    },
                                    "required": [
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/academico/topicos/{id}/force-delete": {
            "delete": {
                "operationId": "topicos.force-delete",
                "summary": "Elimina permanentemente un t\u00f3pico",
                "tags": [
                    "Topico"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "T\u00f3pico eliminado permanentemente."
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "No se puede eliminar permanentemente el t\u00f3pico porque tiene m\u00f3dulos asociados."
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/academico/topicos/trashed": {
            "get": {
                "operationId": "topicos.trashed",
                "summary": "Obtiene solo los t\u00f3picos eliminados (soft delete)",
                "tags": [
                    "Topico"
                ],
                "parameters": [
                    {
                        "name": "sort_by",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_direction",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/TopicoResource"
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "current_page": {
                                                    "type": "string"
                                                },
                                                "last_page": {
                                                    "type": "string"
                                                },
                                                "per_page": {
                                                    "type": "string"
                                                },
                                                "total": {
                                                    "type": "string"
                                                },
                                                "from": {
                                                    "type": "string"
                                                },
                                                "to": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "current_page",
                                                "last_page",
                                                "per_page",
                                                "total",
                                                "from",
                                                "to"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/academico/topicos/filters": {
            "get": {
                "operationId": "topicos.filters",
                "summary": "Obtiene las opciones de filtros disponibles",
                "tags": [
                    "Topico"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "status_options": {
                                                    "type": "array",
                                                    "prefixItems": [
                                                        {
                                                            "type": "string",
                                                            "enum": [
                                                                "Inactivo"
                                                            ]
                                                        },
                                                        {
                                                            "type": "string",
                                                            "enum": [
                                                                "Activo"
                                                            ]
                                                        }
                                                    ],
                                                    "minItems": 2,
                                                    "maxItems": 2,
                                                    "additionalItems": false
                                                },
                                                "topicos": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "status_options",
                                                "topicos"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/academico/topicos/statistics": {
            "get": {
                "operationId": "topicos.statistics",
                "summary": "Obtiene estad\u00edsticas de t\u00f3picos",
                "tags": [
                    "Topico"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "totales": {
                                                    "type": "object",
                                                    "properties": {
                                                        "total": {
                                                            "type": "string"
                                                        },
                                                        "activos": {
                                                            "type": "string"
                                                        },
                                                        "eliminados": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "total",
                                                        "activos",
                                                        "eliminados"
                                                    ]
                                                },
                                                "por_status": {
                                                    "type": "object",
                                                    "properties": {
                                                        "activos": {
                                                            "type": "string"
                                                        },
                                                        "inactivos": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "activos",
                                                        "inactivos"
                                                    ]
                                                },
                                                "con_modulos": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "totales",
                                                "por_status",
                                                "con_modulos"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/translations/messages": {
            "get": {
                "operationId": "translation.getMessages",
                "summary": "Obtener mensajes de la API en el idioma actual",
                "tags": [
                    "Translation"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "object",
                                            "properties": {
                                                "created": {
                                                    "type": "string"
                                                },
                                                "updated": {
                                                    "type": "string"
                                                },
                                                "deleted": {
                                                    "type": "string"
                                                },
                                                "retrieved": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "created",
                                                "updated",
                                                "deleted",
                                                "retrieved"
                                            ]
                                        },
                                        "error": {
                                            "type": "object",
                                            "properties": {
                                                "not_found": {
                                                    "type": "string"
                                                },
                                                "unauthorized": {
                                                    "type": "string"
                                                },
                                                "forbidden": {
                                                    "type": "string"
                                                },
                                                "validation_failed": {
                                                    "type": "string"
                                                },
                                                "server_error": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "not_found",
                                                "unauthorized",
                                                "forbidden",
                                                "validation_failed",
                                                "server_error"
                                            ]
                                        },
                                        "user": {
                                            "type": "object",
                                            "properties": {
                                                "registered": {
                                                    "type": "string"
                                                },
                                                "logged_in": {
                                                    "type": "string"
                                                },
                                                "logged_out": {
                                                    "type": "string"
                                                },
                                                "profile_updated": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "registered",
                                                "logged_in",
                                                "logged_out",
                                                "profile_updated"
                                            ]
                                        },
                                        "locale": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "error",
                                        "user",
                                        "locale"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/translations/locale": {
            "post": {
                "operationId": "translation.setLocale",
                "summary": "Cambiar el idioma de la aplicaci\u00f3n",
                "tags": [
                    "Translation"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "locale": {
                                        "type": "string",
                                        "default": "es"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "properties": {
                                                "locale": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Idioma no soportado"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "locale"
                                            ]
                                        },
                                        "success": {
                                            "type": "boolean"
                                        }
                                    },
                                    "required": [
                                        "message",
                                        "errors",
                                        "success"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Idioma cambiado exitosamente"
                                            ]
                                        },
                                        "locale": {
                                            "type": "string"
                                        },
                                        "success": {
                                            "type": "boolean"
                                        }
                                    },
                                    "required": [
                                        "message",
                                        "locale",
                                        "success"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/translations/validate-example": {
            "post": {
                "operationId": "translation.validateExample",
                "summary": "Ejemplo de uso de traducciones en validaciones",
                "tags": [
                    "Translation"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "password": {
                                        "type": "string",
                                        "minLength": 8
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "minLength": 8
                                    }
                                },
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "string"
                                        },
                                        "success": {
                                            "type": "boolean"
                                        }
                                    },
                                    "required": [
                                        "message",
                                        "data",
                                        "success"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/translations/timezone": {
            "get": {
                "operationId": "translation.getTimezoneInfo",
                "summary": "Obtener informaci\u00f3n de zona horaria",
                "tags": [
                    "Translation"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "timezone": {
                                            "type": "string"
                                        },
                                        "current_time": {
                                            "type": "string"
                                        },
                                        "current_timestamp": {
                                            "type": "string"
                                        },
                                        "locale": {
                                            "type": "string"
                                        },
                                        "formatted_date": {
                                            "type": "string"
                                        },
                                        "day_name": {
                                            "type": "string"
                                        },
                                        "month_name": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "timezone",
                                        "current_time",
                                        "current_timestamp",
                                        "locale",
                                        "formatted_date",
                                        "day_name",
                                        "month_name"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/configuracion/users": {
            "get": {
                "operationId": "users.index",
                "summary": "Mostrar una lista de usuarios",
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated set of `UserResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/UserResource"
                                            }
                                        },
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "first": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "last": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "prev": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "next": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "first",
                                                "last",
                                                "prev",
                                                "next"
                                            ]
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "from": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ]
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "links": {
                                                    "type": "array",
                                                    "description": "Generated paginator links.",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "url": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "label": {
                                                                "type": "string"
                                                            },
                                                            "active": {
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "required": [
                                                            "url",
                                                            "label",
                                                            "active"
                                                        ]
                                                    }
                                                },
                                                "path": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Base path for paginator generated URLs."
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "description": "Number of items shown per page."
                                                },
                                                "to": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ],
                                                    "description": "Number of the last item in the slice."
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "description": "Total number of items being paginated."
                                                }
                                            },
                                            "required": [
                                                "current_page",
                                                "from",
                                                "last_page",
                                                "links",
                                                "path",
                                                "per_page",
                                                "to",
                                                "total"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "links",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "post": {
                "operationId": "users.store",
                "summary": "Store a newly created user in storage",
                "tags": [
                    "User"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreUserRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "`UserResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/UserResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/configuracion/users/{user}": {
            "get": {
                "operationId": "users.show",
                "summary": "Mostrar el usuario especificado",
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "required": true,
                        "description": "The user ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`UserResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/UserResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "put": {
                "operationId": "users.update",
                "summary": "Actualizar el usuario especificado en el almacenamiento",
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "required": true,
                        "description": "The user ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateUserRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`UserResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/UserResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            },
            "delete": {
                "operationId": "users.destroy",
                "summary": "Inactivar el usuario especificado",
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "required": true,
                        "description": "The user ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Esto establecer\u00e1 'deleted_at'",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Usuario inactivado exitosamente."
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "El usuario ya est\u00e1 inactivo."
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/configuracion/users/restore/{id}": {
            "post": {
                "operationId": "user.restore",
                "summary": "Restaurar el usuario especificado",
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Esto establecer\u00e1 'deleted_at' a null",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Usuario restaurado exitosamente."
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "AgendaResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "referido_id": {
                        "type": "string"
                    },
                    "agendador_id": {
                        "type": "string"
                    },
                    "fecha": {
                        "type": "string"
                    },
                    "hora": {
                        "type": "string"
                    },
                    "jornada": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "status_text": {
                        "type": "string",
                        "enum": [
                            "Agendado",
                            "Asisti\u00f3",
                            "No asisti\u00f3",
                            "Reprogram\u00f3",
                            "Cancel\u00f3",
                            "Desconocido"
                        ]
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    },
                    "deleted_at": {
                        "type": "string"
                    },
                    "referido": {
                        "type": "object",
                        "description": "Relaciones cargadas",
                        "properties": {
                            "id": {
                                "type": "string"
                            },
                            "nombre": {
                                "type": "string"
                            },
                            "celular": {
                                "type": "string"
                            },
                            "ciudad": {
                                "type": "string"
                            },
                            "status": {
                                "type": "string"
                            },
                            "status_text": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "id",
                            "nombre",
                            "celular",
                            "ciudad",
                            "status",
                            "status_text"
                        ]
                    },
                    "agendador": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string"
                            },
                            "name": {
                                "type": "string"
                            },
                            "email": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "id",
                            "name",
                            "email"
                        ]
                    }
                },
                "required": [
                    "id",
                    "referido_id",
                    "agendador_id",
                    "fecha",
                    "hora",
                    "jornada",
                    "status",
                    "status_text",
                    "created_at",
                    "updated_at",
                    "deleted_at"
                ],
                "title": "AgendaResource"
            },
            "AreaResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "nombre": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "status_text": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    },
                    "deleted_at": {
                        "type": "string"
                    },
                    "sedes": {
                        "type": "string",
                        "description": "Relaciones cargadas"
                    },
                    "sedes_count": {
                        "type": "string",
                        "description": "Contadores"
                    }
                },
                "required": [
                    "id",
                    "nombre",
                    "status",
                    "status_text",
                    "created_at",
                    "updated_at",
                    "deleted_at"
                ],
                "title": "AreaResource"
            },
            "CursoResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "nombre": {
                        "type": "string"
                    },
                    "duracion": {
                        "type": "string"
                    },
                    "tipo": {
                        "type": "string"
                    },
                    "tipo_text": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "status_text": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    },
                    "deleted_at": {
                        "type": "string"
                    },
                    "referidos": {
                        "type": "string",
                        "description": "Relaciones cargadas"
                    },
                    "estudiantes": {
                        "type": "string"
                    },
                    "referidos_count": {
                        "type": "string",
                        "description": "Contadores"
                    },
                    "estudiantes_count": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "nombre",
                    "duracion",
                    "tipo",
                    "tipo_text",
                    "status",
                    "status_text",
                    "created_at",
                    "updated_at",
                    "deleted_at"
                ],
                "title": "CursoResource"
            },
            "HorarioResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "sede_id": {
                        "type": "string"
                    },
                    "area_id": {
                        "type": "string"
                    },
                    "grupo_id": {
                        "type": "string"
                    },
                    "grupo_nombre": {
                        "type": "string"
                    },
                    "tipo": {
                        "type": "string"
                    },
                    "tipo_text": {
                        "type": "string",
                        "enum": [
                            "Horario de Sede",
                            "Horario de Grupo"
                        ]
                    },
                    "periodo": {
                        "type": "string"
                    },
                    "periodo_text": {
                        "type": "string",
                        "enum": [
                            "Inicio",
                            "Fin"
                        ]
                    },
                    "dia": {
                        "type": "string"
                    },
                    "hora": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "status_text": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    },
                    "deleted_at": {
                        "type": "string"
                    },
                    "sede": {
                        "type": "object",
                        "description": "Relaciones cargadas",
                        "properties": {
                            "id": {
                                "type": "string"
                            },
                            "nombre": {
                                "type": "string"
                            },
                            "direccion": {
                                "type": "string"
                            },
                            "telefono": {
                                "type": "string"
                            },
                            "email": {
                                "type": "string"
                            },
                            "hora_inicio": {
                                "type": "string"
                            },
                            "hora_fin": {
                                "type": "string"
                            },
                            "poblacion_id": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "id",
                            "nombre",
                            "direccion",
                            "telefono",
                            "email",
                            "hora_inicio",
                            "hora_fin",
                            "poblacion_id"
                        ]
                    },
                    "area": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string"
                            },
                            "nombre": {
                                "type": "string"
                            },
                            "status": {
                                "type": "string"
                            },
                            "status_text": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "id",
                            "nombre",
                            "status",
                            "status_text"
                        ]
                    },
                    "sede_count": {
                        "type": "string",
                        "description": "Contadores"
                    },
                    "area_count": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "sede_id",
                    "area_id",
                    "grupo_id",
                    "grupo_nombre",
                    "tipo",
                    "tipo_text",
                    "periodo",
                    "periodo_text",
                    "dia",
                    "hora",
                    "status",
                    "status_text",
                    "created_at",
                    "updated_at",
                    "deleted_at"
                ],
                "title": "HorarioResource"
            },
            "ModuloResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "nombre": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "status_text": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    },
                    "deleted_at": {
                        "type": "string"
                    },
                    "cursos": {
                        "type": "string",
                        "description": "Relaciones cargadas"
                    },
                    "cursos_count": {
                        "type": "string",
                        "description": "Contadores"
                    }
                },
                "required": [
                    "id",
                    "nombre",
                    "status",
                    "status_text",
                    "created_at",
                    "updated_at",
                    "deleted_at"
                ],
                "title": "ModuloResource"
            },
            "PoblacionResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "pais": {
                        "type": "string"
                    },
                    "provincia": {
                        "type": "string"
                    },
                    "nombre": {
                        "type": "string"
                    },
                    "latitud": {
                        "type": "string"
                    },
                    "longitud": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "pais",
                    "provincia",
                    "nombre",
                    "latitud",
                    "longitud",
                    "created_at",
                    "updated_at"
                ],
                "title": "PoblacionResource"
            },
            "ReferidoResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "nombre": {
                        "type": "string"
                    },
                    "celular": {
                        "type": "string"
                    },
                    "ciudad": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "status_text": {
                        "type": "string"
                    },
                    "curso": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string"
                            },
                            "nombre": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "id",
                            "nombre"
                        ]
                    },
                    "gestor": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string"
                            },
                            "name": {
                                "type": "string"
                            },
                            "email": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "id",
                            "name",
                            "email"
                        ]
                    },
                    "seguimientos": {
                        "type": "string"
                    },
                    "agendamientos": {
                        "type": "string"
                    },
                    "seguimientos_count": {
                        "type": "string"
                    },
                    "agendamientos_count": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    },
                    "deleted_at": {
                        "type": "string"
                    },
                    "is_deleted": {
                        "type": "string"
                    },
                    "is_matriculado": {
                        "type": "string"
                    },
                    "can_be_deleted": {
                        "type": "string"
                    },
                    "days_since_created": {
                        "type": "string"
                    },
                    "next_suggested_status": {
                        "type": "string"
                    },
                    "next_suggested_status_text": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "nombre",
                    "celular",
                    "ciudad",
                    "status",
                    "status_text",
                    "created_at",
                    "updated_at",
                    "is_deleted",
                    "is_matriculado",
                    "can_be_deleted",
                    "days_since_created",
                    "next_suggested_status",
                    "next_suggested_status_text"
                ],
                "title": "ReferidoResource"
            },
            "SedeResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "nombre": {
                        "type": "string"
                    },
                    "direccion": {
                        "type": "string"
                    },
                    "telefono": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "hora_inicio": {
                        "type": "string"
                    },
                    "hora_fin": {
                        "type": "string"
                    },
                    "duracion_horas": {
                        "type": "string"
                    },
                    "duracion_minutos": {
                        "type": "string"
                    },
                    "poblacion_id": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    },
                    "deleted_at": {
                        "type": "string"
                    },
                    "poblacion": {
                        "type": "object",
                        "description": "Relaciones cargadas",
                        "properties": {
                            "id": {
                                "type": "string"
                            },
                            "nombre": {
                                "type": "string"
                            },
                            "pais": {
                                "type": "string"
                            },
                            "provincia": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "id",
                            "nombre",
                            "pais",
                            "provincia"
                        ]
                    },
                    "areas": {
                        "type": "string"
                    },
                    "horarios": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "additionalProperties": {}
                        }
                    },
                    "poblacion_count": {
                        "type": "string",
                        "description": "Contadores"
                    },
                    "areas_count": {
                        "type": "string"
                    },
                    "horarios_count": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "nombre",
                    "direccion",
                    "telefono",
                    "email",
                    "hora_inicio",
                    "hora_fin",
                    "duracion_horas",
                    "duracion_minutos",
                    "poblacion_id",
                    "created_at",
                    "updated_at",
                    "deleted_at"
                ],
                "title": "SedeResource"
            },
            "SeguimientoResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "referido_id": {
                        "type": "string"
                    },
                    "seguidor_id": {
                        "type": "string"
                    },
                    "fecha": {
                        "type": "string"
                    },
                    "seguimiento": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    },
                    "deleted_at": {
                        "type": "string"
                    },
                    "referido": {
                        "type": "string",
                        "description": "Relaciones"
                    },
                    "seguidor": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "referido_id",
                    "seguidor_id",
                    "fecha",
                    "seguimiento",
                    "created_at",
                    "updated_at",
                    "deleted_at"
                ],
                "title": "SeguimientoResource"
            },
            "StoreAgendaRequest": {
                "type": "object",
                "properties": {
                    "referido_id": {
                        "type": "integer"
                    },
                    "agendador_id": {
                        "type": "integer"
                    },
                    "fecha": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "hora": {
                        "type": "string",
                        "format": "date"
                    },
                    "jornada": {
                        "type": "string",
                        "enum": [
                            "am",
                            "pm"
                        ]
                    },
                    "status": {
                        "type": "integer",
                        "enum": [
                            "0",
                            "1",
                            "2",
                            "3",
                            "4"
                        ]
                    }
                },
                "required": [
                    "referido_id",
                    "fecha",
                    "hora",
                    "jornada"
                ],
                "title": "StoreAgendaRequest"
            },
            "StoreAreaRequest": {
                "type": "object",
                "properties": {
                    "nombre": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "status": {
                        "type": "integer",
                        "enum": [
                            "0",
                            "1"
                        ]
                    },
                    "sedes": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                },
                "required": [
                    "nombre"
                ],
                "title": "StoreAreaRequest"
            },
            "StoreCursoRequest": {
                "type": "object",
                "properties": {
                    "nombre": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "duracion": {
                        "type": "number",
                        "minimum": 0
                    },
                    "tipo": {
                        "type": "integer",
                        "enum": [
                            "0",
                            "1"
                        ]
                    },
                    "status": {
                        "type": "integer",
                        "enum": [
                            "0",
                            "1"
                        ]
                    }
                },
                "required": [
                    "nombre",
                    "duracion",
                    "tipo"
                ],
                "title": "StoreCursoRequest"
            },
            "StoreHorarioRequest": {
                "type": "object",
                "properties": {
                    "sede_id": {
                        "type": "integer"
                    },
                    "area_id": {
                        "type": "integer"
                    },
                    "grupo_id": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "grupo_nombre": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 255
                    },
                    "tipo": {
                        "type": "boolean"
                    },
                    "periodo": {
                        "type": "boolean"
                    },
                    "dia": {
                        "type": "string",
                        "enum": [
                            "lunes",
                            "martes",
                            "mi\u00e9rcoles",
                            "jueves",
                            "viernes",
                            "s\u00e1bado",
                            "domingo"
                        ]
                    },
                    "hora": {
                        "type": "string",
                        "format": "date"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "required": [
                    "sede_id",
                    "area_id",
                    "tipo",
                    "periodo",
                    "dia",
                    "hora"
                ],
                "title": "StoreHorarioRequest"
            },
            "StoreModuloRequest": {
                "type": "object",
                "properties": {
                    "nombre": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "status": {
                        "type": "integer",
                        "enum": [
                            "0",
                            "1"
                        ]
                    },
                    "curso_ids": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                },
                "required": [
                    "nombre"
                ],
                "title": "StoreModuloRequest"
            },
            "StoreReferidoRequest": {
                "type": "object",
                "properties": {
                    "curso_id": {
                        "type": "integer"
                    },
                    "gestor_id": {
                        "type": "integer"
                    },
                    "nombre": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 255
                    },
                    "celular": {
                        "type": "string",
                        "maxLength": 20
                    },
                    "ciudad": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "status": {
                        "type": "integer",
                        "enum": [
                            "0",
                            "1",
                            "2",
                            "3",
                            "4"
                        ]
                    }
                },
                "required": [
                    "curso_id",
                    "gestor_id",
                    "celular",
                    "ciudad"
                ],
                "title": "StoreReferidoRequest"
            },
            "StoreSedeRequest": {
                "type": "object",
                "properties": {
                    "nombre": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "direccion": {
                        "type": "string",
                        "maxLength": 500
                    },
                    "telefono": {
                        "type": "string",
                        "maxLength": 20
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "maxLength": 255
                    },
                    "hora_inicio": {
                        "type": "string",
                        "format": "date"
                    },
                    "hora_fin": {
                        "type": "string",
                        "format": "date"
                    },
                    "poblacion_id": {
                        "type": "integer"
                    },
                    "areas": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "horarios": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "area_id": {
                                    "type": "integer"
                                },
                                "dia": {
                                    "type": "string",
                                    "enum": [
                                        "lunes",
                                        "martes",
                                        "mi\u00e9rcoles",
                                        "jueves",
                                        "viernes",
                                        "s\u00e1bado",
                                        "domingo"
                                    ]
                                },
                                "hora": {
                                    "type": "string",
                                    "format": "date"
                                },
                                "tipo": {
                                    "type": "boolean"
                                },
                                "periodo": {
                                    "type": "boolean"
                                },
                                "grupo_id": {
                                    "type": [
                                        "integer",
                                        "null"
                                    ]
                                },
                                "grupo_nombre": {
                                    "type": [
                                        "string",
                                        "null"
                                    ],
                                    "maxLength": 255
                                }
                            },
                            "required": [
                                "area_id",
                                "dia",
                                "hora"
                            ]
                        },
                        "minItems": 1
                    }
                },
                "required": [
                    "nombre",
                    "direccion",
                    "telefono",
                    "email",
                    "hora_inicio",
                    "hora_fin",
                    "poblacion_id",
                    "horarios"
                ],
                "title": "StoreSedeRequest"
            },
            "StoreSeguimientoRequest": {
                "type": "object",
                "properties": {
                    "referido_id": {
                        "type": "integer"
                    },
                    "seguidor_id": {
                        "type": "integer"
                    },
                    "fecha": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "seguimiento": {
                        "type": "string",
                        "maxLength": 65535
                    }
                },
                "required": [
                    "referido_id",
                    "seguidor_id",
                    "fecha",
                    "seguimiento"
                ],
                "title": "StoreSeguimientoRequest"
            },
            "StoreTopicoRequest": {
                "type": "object",
                "properties": {
                    "nombre": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "descripcion": {
                        "type": "string",
                        "maxLength": 1000
                    },
                    "duracion": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 999
                    },
                    "status": {
                        "type": "integer",
                        "enum": [
                            "0",
                            "1"
                        ]
                    },
                    "modulo_ids": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                },
                "required": [
                    "nombre",
                    "descripcion",
                    "duracion"
                ],
                "title": "StoreTopicoRequest"
            },
            "StoreUserRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "maxLength": 255
                    },
                    "documento": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "password": {
                        "type": "string"
                    },
                    "password_confirmation": {
                        "type": "string"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "permissions": {
                        "type": "array",
                        "description": "Valida que los roles existan",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "name",
                    "email",
                    "documento",
                    "password",
                    "password_confirmation"
                ],
                "title": "StoreUserRequest"
            },
            "TopicoResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "nombre": {
                        "type": "string"
                    },
                    "descripcion": {
                        "type": "string"
                    },
                    "duracion": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "status_text": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    },
                    "deleted_at": {
                        "type": "string"
                    },
                    "modulos": {
                        "type": "string",
                        "description": "Relaciones cargadas"
                    },
                    "modulos_count": {
                        "type": "string",
                        "description": "Contadores"
                    }
                },
                "required": [
                    "id",
                    "nombre",
                    "descripcion",
                    "duracion",
                    "status",
                    "status_text",
                    "created_at",
                    "updated_at",
                    "deleted_at"
                ],
                "title": "TopicoResource"
            },
            "UpdateAgendaRequest": {
                "type": "object",
                "properties": {
                    "referido_id": {
                        "type": "integer"
                    },
                    "agendador_id": {
                        "type": "integer"
                    },
                    "fecha": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "hora": {
                        "type": "string",
                        "format": "date"
                    },
                    "jornada": {
                        "type": "string",
                        "enum": [
                            "am",
                            "pm"
                        ]
                    },
                    "status": {
                        "type": "integer",
                        "enum": [
                            "0",
                            "1",
                            "2",
                            "3",
                            "4"
                        ]
                    }
                },
                "title": "UpdateAgendaRequest"
            },
            "UpdateCursoRequest": {
                "type": "object",
                "properties": {
                    "nombre": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "duracion": {
                        "type": "number",
                        "minimum": 0
                    },
                    "tipo": {
                        "type": "integer"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "title": "UpdateCursoRequest"
            },
            "UpdateHorarioRequest": {
                "type": "object",
                "properties": {
                    "sede_id": {
                        "type": "integer"
                    },
                    "area_id": {
                        "type": "integer"
                    },
                    "grupo_id": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "grupo_nombre": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 255
                    },
                    "tipo": {
                        "type": "boolean"
                    },
                    "periodo": {
                        "type": "boolean"
                    },
                    "dia": {
                        "type": "string",
                        "enum": [
                            "lunes",
                            "martes",
                            "mi\u00e9rcoles",
                            "jueves",
                            "viernes",
                            "s\u00e1bado",
                            "domingo"
                        ]
                    },
                    "hora": {
                        "type": "string",
                        "format": "date"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "title": "UpdateHorarioRequest"
            },
            "UpdateModuloRequest": {
                "type": "object",
                "properties": {
                    "nombre": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "status": {
                        "type": "string"
                    },
                    "curso_ids": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                },
                "title": "UpdateModuloRequest"
            },
            "UpdateReferidoRequest": {
                "type": "object",
                "properties": {
                    "curso_id": {
                        "type": "integer"
                    },
                    "gestor_id": {
                        "type": "integer"
                    },
                    "nombre": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 255
                    },
                    "celular": {
                        "type": "string",
                        "maxLength": 20
                    },
                    "ciudad": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "status": {
                        "type": "integer",
                        "enum": [
                            "0",
                            "1",
                            "2",
                            "3",
                            "4"
                        ]
                    }
                },
                "title": "UpdateReferidoRequest"
            },
            "UpdateSedeRequest": {
                "type": "object",
                "properties": {
                    "nombre": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "direccion": {
                        "type": "string",
                        "maxLength": 500
                    },
                    "telefono": {
                        "type": "string",
                        "maxLength": 20
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "maxLength": 255
                    },
                    "hora_inicio": {
                        "type": "string",
                        "format": "date"
                    },
                    "hora_fin": {
                        "type": "string",
                        "format": "date"
                    },
                    "poblacion_id": {
                        "type": "integer"
                    },
                    "areas": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "horarios": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "area_id": {
                                    "type": "integer"
                                },
                                "dia": {
                                    "type": "string",
                                    "enum": [
                                        "lunes",
                                        "martes",
                                        "mi\u00e9rcoles",
                                        "jueves",
                                        "viernes",
                                        "s\u00e1bado",
                                        "domingo"
                                    ]
                                },
                                "hora": {
                                    "type": "string",
                                    "format": "date"
                                },
                                "tipo": {
                                    "type": "boolean"
                                },
                                "periodo": {
                                    "type": "boolean"
                                },
                                "grupo_id": {
                                    "type": [
                                        "integer",
                                        "null"
                                    ]
                                },
                                "grupo_nombre": {
                                    "type": [
                                        "string",
                                        "null"
                                    ],
                                    "maxLength": 255
                                }
                            }
                        }
                    }
                },
                "title": "UpdateSedeRequest"
            },
            "UpdateSeguimientoRequest": {
                "type": "object",
                "properties": {
                    "referido_id": {
                        "type": "integer"
                    },
                    "seguidor_id": {
                        "type": "integer"
                    },
                    "fecha": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "seguimiento": {
                        "type": "string",
                        "maxLength": 65535
                    }
                },
                "title": "UpdateSeguimientoRequest"
            },
            "UpdateTopicoRequest": {
                "type": "object",
                "properties": {
                    "nombre": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "descripcion": {
                        "type": "string",
                        "maxLength": 1000
                    },
                    "duracion": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 999
                    },
                    "status": {
                        "type": "string"
                    },
                    "modulo_ids": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                },
                "required": [
                    "nombre",
                    "descripcion",
                    "duracion"
                ],
                "title": "UpdateTopicoRequest"
            },
            "UpdateUserRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "maxLength": 255
                    },
                    "documento": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "password": {
                        "type": "string"
                    },
                    "password_confirmation": {
                        "type": "string"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "permissions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "title": "UpdateUserRequest"
            },
            "UserResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "array",
                        "items": {}
                    },
                    "email": {
                        "type": "string"
                    },
                    "documento": {
                        "type": "string"
                    },
                    "roles": {
                        "type": "string"
                    },
                    "permissions": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "email",
                    "documento",
                    "created_at",
                    "updated_at"
                ],
                "title": "UserResource"
            }
        },
        "responses": {
            "ValidationException": {
                "description": "Validation error",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Errors overview."
                                },
                                "errors": {
                                    "type": "object",
                                    "description": "A detailed description of each field that failed validation.",
                                    "additionalProperties": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "required": [
                                "message",
                                "errors"
                            ]
                        }
                    }
                }
            },
            "AuthenticationException": {
                "description": "Unauthenticated",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error overview."
                                }
                            },
                            "required": [
                                "message"
                            ]
                        }
                    }
                }
            },
            "ModelNotFoundException": {
                "description": "Not found",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error overview."
                                }
                            },
                            "required": [
                                "message"
                            ]
                        }
                    }
                }
            },
            "AuthorizationException": {
                "description": "Authorization error",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error overview."
                                }
                            },
                            "required": [
                                "message"
                            ]
                        }
                    }
                }
            }
        }
    }
}